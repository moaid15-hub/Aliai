src/
│
├── 📂 app/
│   │
│   └── 📂 personas/
│       └── 📂 iraqi-teacher/                 # ⭐ شخصية المعلم العراقي
│           ├── page.tsx                      # صفحة المعلم
│           └── layout.tsx
│
├── 📂 components/
│   │
│   └── 📂 personas/
│       │
│       └── 📂 iraqi-teacher/                 # ⭐ مكونات المعلم العراقي
│           │
│           ├── index.ts
│           │
│           ├── 🎓 **مكونات الواجهة**
│           │   ├── TeacherChat.tsx           # واجهة الدردشة
│           │   ├── TeacherChat.css
│           │   ├── ImageUploader.tsx         # رفع الصور
│           │   ├── ImageUploader.css
│           │   ├── ImagePreview.tsx          # معاينة الصورة
│           │   ├── ImagePreview.css
│           │   ├── TeacherAvatar.tsx         # صورة العمو
│           │   ├── TeacherAvatar.css
│           │   ├── SubjectSelector.tsx       # اختيار المادة
│           │   ├── SubjectSelector.css
│           │   ├── GradeSelector.tsx         # اختيار الصف
│           │   └── GradeSelector.css
│           │
│           ├── 📊 **مكونات العرض**
│           │   ├── ExplanationDisplay.tsx    # عرض الشرح
│           │   ├── ExplanationDisplay.css
│           │   ├── StepByStep.tsx            # الشرح خطوة بخطوة
│           │   ├── StepByStep.css
│           │   ├── EncouragementBadge.tsx    # شارات التشجيع
│           │   └── EncouragementBadge.css
│           │
│           └── 📂 data/
│               ├── iraqiTeacherData.ts       # بيانات الشخصية
│               ├── iraqiCurriculum.ts        # المناهج العراقية
│               ├── dialectPhrases.ts         # جمل اللهجة البغدادية
│               └── encouragementPhrases.ts   # جمل التشجيع
│
├── 📂 services/
│   │
│   ├── 📂 persona/
│   │   └── 📂 iraqi-teacher/                 # ⭐ خدمات المعلم العراقي
│   │       ├── teacher-service.ts            # الخدمة الرئيسية
│   │       ├── curriculum-service.ts         # خدمة المناهج
│   │       └── dialect-service.ts            # خدمة اللهجة
│   │
│   └── 📂 image-processing/                  # ⭐ معالجة الصور (النظام الهجين)
│       │
│       ├── index.ts                          # النقطة الرئيسية
│       │
│       ├── 🧠 **المعالج الذكي الرئيسي**
│       │   ├── smart-processor.ts            # المنسق الذكي (يختار الطريقة)
│       │   └── processor-selector.ts         # اختيار المعالج المناسب
│       │
│       ├── 👁️ **معالجة AI Vision**
│       │   ├── vision-processor.ts           # معالج Vision الرئيسي
│       │   ├── claude-vision.ts              # Claude Vision API
│       │   ├── gpt4-vision.ts                # GPT-4 Vision API
│       │   ├── gemini-vision.ts              # Gemini Vision API
│       │   └── vision-fallback.ts            # Fallback بين الـ Vision APIs
│       │
│       ├── 📝 **معالجة OCR**
│       │   ├── ocr-processor.ts              # معالج OCR الرئيسي
│       │   ├── tesseract-ocr.ts              # Tesseract OCR
│       │   ├── google-vision-ocr.ts          # Google Vision OCR
│       │   ├── azure-ocr.ts                  # Azure OCR
│       │   └── ocr-fallback.ts               # Fallback بين OCR APIs
│       │
│       ├── 🔍 **تحليل الصورة**
│       │   ├── image-analyzer.ts             # تحليل نوع الصورة
│       │   ├── image-quality-checker.ts      # فحص جودة الصورة
│       │   ├── content-detector.ts           # كشف المحتوى (نص/رسم/مخطط)
│       │   └── handwriting-detector.ts       # كشف الخط اليدوي
│       │
│       ├── 🔄 **النظام الهجين**
│       │   ├── hybrid-engine.ts              # المحرك الهجين الرئيسي
│       │   ├── strategy-selector.ts          # اختيار الاستراتيجية
│       │   ├── ocr-first-strategy.ts         # استراتيجية: OCR أولاً
│       │   ├── vision-first-strategy.ts      # استراتيجية: Vision أولاً
│       │   ├── parallel-strategy.ts          # استراتيجية: الاثنين معاً
│       │   └── adaptive-strategy.ts          # استراتيجية: تكيفية ذكية
│       │
│       ├── 🛠️ **معالجة مسبقة**
│       │   ├── image-preprocessor.ts         # معالجة الصورة قبل الإرسال
│       │   ├── image-enhancer.ts             # تحسين جودة الصورة
│       │   ├── image-rotator.ts              # تدوير الصورة
│       │   ├── contrast-adjuster.ts          # ضبط التباين
│       │   └── noise-remover.ts              # إزالة التشويش
│       │
│       ├── 📊 **معالجة لاحقة**
│       │   ├── result-merger.ts              # دمج النتائج
│       │   ├── text-cleaner.ts               # تنظيف النص المستخرج
│       │   ├── arabic-fixer.ts               # إصلاح النص العربي
│       │   └── result-validator.ts           # التحقق من النتائج
│       │
│       ├── 🎯 **كشف نوع المحتوى**
│       │   ├── content-type-detector.ts      # كشف نوع المحتوى
│       │   ├── math-detector.ts              # كشف الرياضيات
│       │   ├── arabic-detector.ts            # كشف النص العربي
│       │   ├── diagram-detector.ts           # كشف المخططات/الرسومات
│       │   └── mixed-content-detector.ts     # كشف المحتوى المختلط
│       │
│       ├── ⚡ **التحسين والأداء**
│       │   ├── cache-manager.ts              # إدارة الكاش
│       │   ├── rate-limiter.ts               # تحديد المعدل
│       │   ├── cost-optimizer.ts             # تحسين التكلفة
│       │   └── performance-monitor.ts        # مراقبة الأداء
│       │
│       ├── 🔧 **الإعدادات والتكوين**
│       │   ├── processing-config.ts          # إعدادات المعالجة
│       │   ├── api-keys-config.ts            # مفاتيح APIs
│       │   ├── fallback-config.ts            # إعدادات Fallback
│       │   └── quality-config.ts             # إعدادات الجودة
│       │
│       └── 📂 utils/
│           ├── image-converter.ts            # تحويل صيغ الصور
│           ├── base64-handler.ts             # معالجة Base64
│           ├── file-validator.ts             # التحقق من الملفات
│           └── error-handler.ts              # معالجة الأخطاء
│
├── 📂 types/
│   │
│   ├── iraqi-teacher.types.ts                # أنواع المعلم العراقي
│   └── image-processing.types.ts             # أنواع معالجة الصور
│
└── 📂 config/
    │
    ├── iraqi-teacher-config.ts               # إعدادات المعلم
    └── image-processing-config.ts            # إعدادات معالجة الصور
```

---

## 📊 إحصائيات الهيكل:

### **المجلدات الجديدة:**
```
📁 3 مجلدات رئيسية جديدة:
├── components/personas/iraqi-teacher/
├── services/persona/iraqi-teacher/
└── services/image-processing/
```

### **المجلدات الفرعية (معالجة الصور):**
```
📁 10 مجلدات فرعية:
├── AI Vision (4 ملفات)
├── OCR (4 ملفات)
├── تحليل الصورة (4 ملفات)
├── النظام الهجين (6 ملفات)
├── معالجة مسبقة (5 ملفات)
├── معالجة لاحقة (4 ملفات)
├── كشف المحتوى (5 ملفات)
├── التحسين والأداء (4 ملفات)
├── الإعدادات (4 ملفات)
└── Utils (4 ملفات)
```

### **الملفات الجديدة:**
```
📄 ~80 ملف جديد:
- 12 مكون React (tsx + css)
- 4 ملفات بيانات
- 3 خدمات المعلم
- ~60 ملف لمعالجة الصور
```

---

## 🎯 الملفات الأهم (حسب الأولوية):

### **المرحلة 1: البيانات الأساسية**
```
1. src/types/iraqi-teacher.types.ts
2. src/types/image-processing.types.ts
3. src/components/personas/iraqi-teacher/data/iraqiTeacherData.ts
4. src/components/personas/iraqi-teacher/data/dialectPhrases.ts
5. src/config/iraqi-teacher-config.ts
6. src/config/image-processing-config.ts
```

### **المرحلة 2: النظام الهجين (القلب)**
```
7. src/services/image-processing/smart-processor.ts
8. src/services/image-processing/hybrid-engine.ts
9. src/services/image-processing/strategy-selector.ts
10. src/services/image-processing/adaptive-strategy.ts
```

### **المرحلة 3: معالجات الصور**
```
11. src/services/image-processing/vision-processor.ts
12. src/services/image-processing/ocr-processor.ts
13. src/services/image-processing/image-analyzer.ts
14. src/services/image-processing/content-type-detector.ts
```

### **المرحلة 4: خدمات المعلم**
```
15. src/services/persona/iraqi-teacher/teacher-service.ts
16. src/services/persona/iraqi-teacher/curriculum-service.ts
17. src/services/persona/iraqi-teacher/dialect-service.ts
```

### **المرحلة 5: المكونات (UI)**
```
18. src/components/personas/iraqi-teacher/TeacherChat.tsx
19. src/components/personas/iraqi-teacher/ImageUploader.tsx
20. src/components/personas/iraqi-teacher/ExplanationDisplay.tsx
```

---

## ✅ ميزات النظام الهجين:

### **1. الذكاء التكيفي:**
- يحلل الصورة أولاً
- يختار أفضل طريقة معالجة
- يتعلم من النتائج السابقة

### **2. Fallback متعدد المستويات:**
- إذا فشل OCR → Vision
- إذا فشل Claude → GPT-4
- إذا فشل GPT-4 → Gemini

### **3. معالجة متوازية:**
- يشغل OCR و Vision معاً
- يختار الأفضل
- يدمج النتائج

### **4. تحسين التكلفة:**
- يستخدم OCR (الأرخص) للنصوص الواضحة
- يستخدم Vision (الأغلى) للمعقد فقط
- يحفظ نتائج في Cache

### **5. جودة عالية:**
- معالجة مسبقة للصور
- تحسين الجودة تلقائياً
- إصلاح النصوص العربية

---

## 🎯 كيف يعمل النظام الهجين؟
```
الطالب يرفع صورة
    ↓
تحليل الصورة
    ↓
اختيار الاستراتيجية:
    ├─ نص واضح → OCR أولاً
    ├─ رسومات → Vision أولاً
    ├─ خط يدوي → Vision + OCR معاً
    └─ مختلط → النظام التكيفي
    ↓
معالجة
    ↓
دمج النتائج
    ↓
إرسال للمعلم العراقي
    ↓
الشرح بالعراقي
