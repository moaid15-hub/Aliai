الملفات:

image-processing.types.ts
iraqi-teacher.types.ts


📄 1. image-processing.types.ts
typescript// src/types/image-processing.types.ts

/**
 * أنواع معالجة الصور - النظام الهجين الذكي
 */

// ====================================
// أنواع الصور
// ====================================

export type ImageFormat = 'jpeg' | 'jpg' | 'png' | 'webp' | 'heic' | 'heif';

export interface UploadedImage {
  file: File;
  preview: string;
  format: ImageFormat;
  size: number; // بالبايت
  width?: number;
  height?: number;
  uploadedAt: Date;
}

// ====================================
// تحليل الصورة
// ====================================

export type ContentType = 
  | 'text-clear'           // نص واضح مطبوع
  | 'text-handwritten'     // نص مكتوب باليد
  | 'math-problem'         // مسألة رياضية
  | 'diagram'              // مخطط أو رسم بياني
  | 'drawing'              // رسمة
  | 'mixed'                // محتوى مختلط
  | 'unknown';             // غير معروف

export type ImageQuality = 'excellent' | 'good' | 'fair' | 'poor' | 'very-poor';

export interface ImageAnalysisResult {
  contentType: ContentType;
  quality: ImageQuality;
  hasArabicText: boolean;
  hasEnglishText: boolean;
  hasMath: boolean;
  hasDiagrams: boolean;
  isHandwritten: boolean;
  rotation?: number; // درجة الدوران المطلوبة
  needsEnhancement: boolean;
  confidence: number; // 0-1
}

// ====================================
// استراتيجيات المعالجة
// ====================================

export type ProcessingStrategy = 
  | 'ocr-first'      // OCR أولاً ثم Vision إن فشل
  | 'vision-first'   // Vision أولاً ثم OCR إن فشل
  | 'parallel'       // الاثنين معاً بشكل متوازي
  | 'adaptive';      // تكيفي ذكي (يختار تلقائياً)

export type ProcessorType = 'ocr' | 'vision' | 'hybrid';

// ====================================
// مزودي الخدمات
// ====================================

export type VisionProvider = 'claude' | 'gpt4' | 'gemini';
export type OCRProvider = 'tesseract' | 'google-vision' | 'azure';

// ====================================
// نتائج المعالجة
// ====================================

export interface OCRResult {
  provider: OCRProvider;
  text: string;
  confidence: number;
  language: string;
  processingTime: number; // ميلي ثانية
  success: boolean;
  error?: string;
}

export interface VisionResult {
  provider: VisionProvider;
  description: string;
  extractedText?: string;
  detectedObjects?: string[];
  confidence: number;
  processingTime: number;
  success: boolean;
  error?: string;
}

export interface ProcessingResult {
  strategy: ProcessingStrategy;
  processorUsed: ProcessorType;
  finalText: string;
  confidence: number;
  totalProcessingTime: number;
  ocrResult?: OCRResult;
  visionResult?: VisionResult;
  analysisResult: ImageAnalysisResult;
  success: boolean;
  error?: string;
  timestamp: Date;
}

// ====================================
// إعدادات المعالجة
// ====================================

export interface ProcessingOptions {
  strategy?: ProcessingStrategy;
  preferredVisionProvider?: VisionProvider;
  preferredOCRProvider?: OCRProvider;
  enableFallback?: boolean;
  maxRetries?: number;
  timeout?: number; // ميلي ثانية
  enhanceImage?: boolean;
  fixArabicText?: boolean;
  cacheResults?: boolean;
}

export interface ProcessingConfig {
  // حدود الجودة
  qualityThresholds: {
    excellent: number;
    good: number;
    fair: number;
    poor: number;
  };
  
  // حدود الثقة
  confidenceThresholds: {
    high: number;    // > 0.9
    medium: number;  // > 0.7
    low: number;     // > 0.5
  };
  
  // استراتيجيات حسب نوع المحتوى
  strategyByContent: Record<ContentType, ProcessingStrategy>;
  
  // Fallback order
  visionFallbackOrder: VisionProvider[];
  ocrFallbackOrder: OCRProvider[];
  
  // Timeouts
  timeouts: {
    vision: number;
    ocr: number;
    total: number;
  };
  
  // التكلفة (تقديرية)
  costs: {
    vision: Record<VisionProvider, number>;
    ocr: Record<OCRProvider, number>;
  };
}

// ====================================
// Cache
// ====================================

export interface CachedResult {
  imageHash: string;
  result: ProcessingResult;
  cachedAt: Date;
  expiresAt: Date;
}

// ====================================
// الإحصائيات والمراقبة
// ====================================

export interface ProcessingStats {
  totalRequests: number;
  successfulRequests: number;
  failedRequests: number;
  averageProcessingTime: number;
  strategyUsageCount: Record<ProcessingStrategy, number>;
  providerUsageCount: {
    vision: Record<VisionProvider, number>;
    ocr: Record<OCRProvider, number>;
  };
  totalCost: number;
  cacheHitRate: number;
}

// ====================================
// Errors
// ====================================

export type ProcessingErrorType =
  | 'image-invalid'
  | 'image-too-large'
  | 'image-corrupted'
  | 'ocr-failed'
  | 'vision-failed'
  | 'all-providers-failed'
  | 'timeout'
  | 'api-error'
  | 'network-error'
  | 'unknown';

export interface ProcessingError {
  type: ProcessingErrorType;
  message: string;
  details?: any;
  timestamp: Date;
}

📄 2. iraqi-teacher.types.ts
typescript// src/types/iraqi-teacher.types.ts

/**
 * أنواع شخصية المعلم العراقي
 */

import { ProcessingResult } from './image-processing.types';

// ====================================
// الصفوف والمواد
// ====================================

export type Grade = '1' | '2' | '3' | '4' | '5' | '6';

export type Subject = 
  | 'math'          // رياضيات
  | 'arabic'        // عربي
  | 'science'       // علوم
  | 'social'        // اجتماعيات
  | 'english'       // إنجليزي
  | 'islamic'       // تربية إسلامية
  | 'general';      // عام

export interface SubjectInfo {
  id: Subject;
  nameArabic: string;
  nameDialect: string; // باللهجة العراقية
  icon: string;
  color: string;
}

export interface GradeInfo {
  id: Grade;
  nameArabic: string;
  nameDialect: string;
  ageRange: string;
  subjects: Subject[];
}

// ====================================
// المناهج العراقية
// ====================================

export interface CurriculumTopic {
  id: string;
  subject: Subject;
  grade: Grade;
  title: string;
  titleDialect: string;
  description: string;
  keywords: string[];
  examples: string[];
  commonMistakes: string[];
  teachingTips: string[];
}

export interface Curriculum {
  grade: Grade;
  subjects: {
    [key in Subject]?: CurriculumTopic[];
  };
}

// ====================================
// الطلبات والردود
// ====================================

export type RequestType = 
  | 'explain-homework'    // شرح واجب
  | 'explain-lesson'      // شرح درس
  | 'explain-concept'     // شرح مفهوم
  | 'solve-problem'       // حل مسألة
  | 'check-answer'        // تصحيح إجابة
  | 'general-question';   // سؤال عام

export interface StudentRequest {
  id: string;
  type: RequestType;
  subject?: Subject;
  grade?: Grade;
  message: string;
  image?: ProcessingResult; // إذا كان فيه صورة
  timestamp: Date;
}

export interface TeacherResponse {
  id: string;
  requestId: string;
  explanation: string; // الشرح بالعراقي
  steps?: ExplanationStep[]; // خطوات الشرح
  encouragement: string; // جملة تشجيع
  followUpQuestions?: string[]; // أسئلة للتأكد من الفهم
  relatedTopics?: string[]; // مواضيع ذات صلة
  timestamp: Date;
}

export interface ExplanationStep {
  stepNumber: number;
  title: string;
  description: string;
  example?: string;
  image?: string; // رابط صورة توضيحية
}

// ====================================
// اللهجة البغدادية
// ====================================

export interface DialectPhrase {
  standard: string; // الفصحى
  dialect: string;  // العراقي
  context: string;  // متى نستخدمها
}

export interface DialectConfig {
  greetings: DialectPhrase[];
  encouragement: DialectPhrase[];
  explanationStarters: DialectPhrase[];
  questionPhrases: DialectPhrase[];
  transitions: DialectPhrase[];
  closings: DialectPhrase[];
}

// ====================================
// شخصية المعلم
// ====================================

export interface TeacherPersona {
  id: string;
  name: string;
  nameDialect: string; // "عمو أحمد" مثلاً
  avatar: string;
  personality: {
    style: 'patient' | 'energetic' | 'calm'; // صبور
    tone: 'friendly' | 'formal' | 'playful'; // ودود
    humor: boolean; // يستخدم الفكاهة؟
  };
  specialties: Subject[];
  experience: string;
  motto: string; // شعاره
  mottoDialect: string;
}

// ====================================
// الجلسة
// ====================================

export interface TeachingSession {
  id: string;
  studentId?: string;
  grade?: Grade;
  subject?: Subject;
  startedAt: Date;
  lastActivityAt: Date;
  requests: StudentRequest[];
  responses: TeacherResponse[];
  learningProgress: {
    understoodTopics: string[];
    needsReview: string[];
    strengths: string[];
    weaknesses: string[];
  };
}

// ====================================
// الإعدادات
// ====================================

export interface TeacherSettings {
  useDialect: boolean; // استخدام اللهجة العراقية
  dialectLevel: 'full' | 'mixed' | 'minimal'; // مستوى اللهجة
  detailLevel: 'simple' | 'moderate' | 'detailed'; // مستوى التفصيل
  useEmojis: boolean;
  useEncouragement: boolean;
  maxExplanationLength: number;
  askFollowUpQuestions: boolean;
  provideExamples: boolean;
}

// ====================================
// System Prompt
// ====================================

export interface SystemPromptConfig {
  basePrompt: string;
  gradeSpecificPrompts: Record<Grade, string>;
  subjectSpecificPrompts: Record<Subject, string>;
  dialectInstructions: string;
  exampleConversations: Array<{
    student: string;
    teacher: string;
  }>;
}

// ====================================
// التحليلات (للمرحلة الثانية)
// ====================================

export interface StudentAnalytics {
  studentId: string;
  totalSessions: number;
  totalQuestions: number;
  subjectsAsked: Record<Subject, number>;
  averageResponseTime: number;
  satisfactionRate?: number;
  progressOverTime: Array<{
    date: Date;
    topic: string;
    understood: boolean;
  }>;
}